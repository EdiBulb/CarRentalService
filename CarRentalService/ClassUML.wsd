@startuml
class User {
  - user_id: int
  - name: string
  - email: string
  + display_info(): void
  + perform_task(): void
}

class Customer {
  - role: string
  + perform_task(): void
}

class Admin {
  - role: string
  + perform_task(): void
}

class UserManager {
  - conn: DatabaseConnection
  - cursor: DatabaseCursor
  + register_user(name: string, email: string, password: string, role: string): void
  + login(email: string, password: string): User
}

class CarManager {
  - conn: DatabaseConnection
  - cursor: DatabaseCursor
  + add_car(make: string, model: string, year: int, mileage: int, available_now: boolean, min_rent_period: int, max_rent_period: int): void
  + update_car(car_id: int, make: string, model: string, year: int, mileage: int, available_now: boolean, min_rent_period: int, max_rent_period: int): void
  + delete_car(car_id: int): void
  + list_cars(): void
}

class RentalManager {
  - conn: DatabaseConnection
  - cursor: DatabaseCursor
  + create_rental(car_id: int, user_id: int, start_date: Date, end_date: Date): void
  + list_rentals(): void
  + approve_rental(rental_id: int): void
  + cancel_rental(rental_id: int): void
  + complete_rental(rental_id: int): void
}

User <|-- Customer
User <|-- Admin
UserManager ..> User : creates
CarManager ..> Car : manages
RentalManager ..> Rental : manages

@enduml
